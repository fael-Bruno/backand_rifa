generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MASTER // controla todas as barbearias
  ADMIN // dono de uma barbearia
  STAFF // barbeiro/funcionário
  CUSTOMER // cliente que agenda
}

model BarberShop {
  id        String   @id @default(uuid())
  name      String
  address   String
  phone     String?
  createdAt DateTime @default(now())

  users    User[]
  services Service[]
  bookings Booking[]
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  role         Role     @default(CUSTOMER)
  barberShopId String?
  createdAt    DateTime @default(now())

  barberShop BarberShop? @relation(fields: [barberShopId], references: [id])

  // Relações de agendamentos
  bookings  Booking[] @relation("UserBookings") // cliente que agenda
  staffings Booking[] @relation("StaffBookings") // quando atua como staff
}

model Service {
  id           String   @id @default(uuid())
  name         String
  price        Float
  duration     Int // duração em minutos
  barberShopId String
  createdAt    DateTime @default(now())

  barberShop BarberShop @relation(fields: [barberShopId], references: [id])
  bookings   Booking[]
}

model Booking {
  id        String   @id @default(uuid())
  date      DateTime
  userId    String
  staffId   String?
  serviceId String
  createdAt DateTime @default(now())

  // Relações
  user         User        @relation("UserBookings", fields: [userId], references: [id])
  staff        User?       @relation("StaffBookings", fields: [staffId], references: [id])
  service      Service     @relation(fields: [serviceId], references: [id])
  BarberShop   BarberShop? @relation(fields: [barberShopId], references: [id])
  barberShopId String?
}
